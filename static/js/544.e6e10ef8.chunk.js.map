{"version":3,"file":"static/js/544.e6e10ef8.chunk.js","mappings":"2UAEaA,EAAM,mCAENC,EAAuB,mCAAG,uGAEtBC,EAAAA,EAAAA,IAAA,mEACiDF,IAH3B,wEAMnCG,QAAQC,IAAR,MANmC,wDAAH,qDAUvBC,EAAc,mCAAG,WAAMC,GAAN,0FAEbJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,oBAC8CN,EAD9C,oBAFa,wEAM1BG,QAAQC,IAAR,MAN0B,wDAAH,sDAUdG,EAAuB,mCAAG,WAAMC,GAAN,0FAEtBN,EAAAA,EAAAA,IAAA,4DAC0CF,EAD1C,iCACsEQ,EADtE,YAFsB,wEAMnCL,QAAQC,IAAR,MANmC,wDAAH,sDAUvBK,EAAc,mCAAG,WAAMH,GAAN,0FAEbJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,4BACsDN,EADtD,oBAFa,wEAM1BG,QAAQC,IAAR,MAN0B,wDAAH,sDAUdM,EAAiB,mCAAG,WAAMJ,GAAN,0FAEhBJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,4BACsDN,EADtD,oBAFgB,wEAM7BG,QAAQC,IAAR,MAN6B,wDAAH,sDAUjBO,EAAiB,mCAAG,WAAML,GAAN,0FAEhBJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,2BACqDN,EADrD,oBAFgB,wEAM7BG,QAAQC,IAAR,MAN6B,wDAAH,qD,mICY9B,UAtDa,WACX,OAA0CQ,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMC,EAAiB,mCAAG,yGAGdf,EAAAA,EAAAA,MAHc,gBAEdgB,EAFc,EAEtBC,KAAQD,QAGJE,EAAeF,EAAQG,KAAI,kBAAiC,CAChEC,GAD+B,EAAGA,GAElCC,YAF+B,EAAOA,YAGtCC,MAH+B,EAAoBA,MAApB,IAMjCT,EAAiBK,GAXO,2CAAH,qDAavBH,GAGD,CAFC,MAAOQ,GACPrB,QAAQC,IAAIoB,EACb,CAGF,GAAE,KAGD,SAAC,KAAD,UACGX,EAAcO,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MACrC,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAME,GAAE,kBAAaJ,GAArB,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEK,IACEJ,EAAW,0CAC4BA,GAD5B,2PAIbK,IAAKJ,EACLK,MAAM,WAGV,SAAC,KAAD,WACE,wBAAKL,UAdQF,EAmBtB,KAGN,C,+JC9DYQ,EAAeC,EAAAA,EAAAA,GAAH,wfAoBZC,EAAWD,EAAAA,EAAAA,IAAH,2DAKRE,EAAkBF,EAAAA,EAAAA,GAAH,gIAUfG,EAAkBH,EAAAA,EAAAA,IAAH,+K,kNCnCfI,EAAkBJ,EAAAA,EAAAA,OAAH,mcAmBfK,EAAaL,EAAAA,EAAAA,KAAH,mLAUVM,EAAgBN,EAAAA,EAAAA,OAAH,icAoBbO,EAAqBP,EAAAA,EAAAA,KAAH,iNAalBQ,EAAcR,EAAAA,EAAAA,MAAH,sUAmBXS,EAAYT,EAAAA,EAAAA,IAAH,6C","sources":["api/api.js","pages/Home/Home.jsx","pages/Home/Home.styled.jsx","pages/Movies/Movies.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const KEY = '298a5b49d75fb843dc4c4c38d9d64139';\n\nexport const fetchTrendingMoviesData = async () => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=${KEY}`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchMovieInfo = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchMoviesBySearchWord = async searchWord => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${searchWord}&page=1`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchTrailerVideo = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${KEY}&language=en-US`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { fetchTrendingMoviesData } from 'api/api';\nimport {\n  TrendingItem,\n  TrendingGallery,\n  ImgThumb,\n  TitleMovieThumb,\n} from './Home.styled';\nimport { PosterImg } from 'pages/Movies/Movies.styled';\n\nconst Home = () => {\n  const [popularMovies, setPopularMovies] = useState([]);\n\n  useEffect(() => {\n    try {\n      const getTrendingMovies = async () => {\n        const {\n          data: { results },\n        } = await fetchTrendingMoviesData();\n\n        const filteredData = results.map(({ id, poster_path, title }) => ({\n          id,\n          poster_path,\n          title,\n        }));\n\n        setPopularMovies(filteredData);\n      };\n      getTrendingMovies();\n    } catch (e) {\n      console.log(e);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <TrendingGallery>\n      {popularMovies.map(({ id, poster_path, title }) => {\n        return (\n          <TrendingItem key={id}>\n            <Link to={`/movies/${id}`}>\n              <ImgThumb>\n                <PosterImg\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : `https://media.istockphoto.com/id/147273331/uk/%D1%84%D0%BE%D1%82%D0%BE/%D1%81%D0%B8%D0%BD%D1%94-%D0%B2%D1%96%D0%B4%D1%80%D0%BE-%D0%BF%D0%BE%D0%BF%D0%BA%D0%BE%D1%80%D0%BD%D1%83.jpg?s=2048x2048&w=is&k=20&c=EVEpgBCnZmkrieihX5eDgsssBgcGyU71woNkj5N4FiM=`\n                  }\n                  alt={title}\n                  width=\"352\"\n                />\n              </ImgThumb>\n              <TitleMovieThumb>\n                <h2>{title}</h2>\n              </TitleMovieThumb>\n            </Link>\n          </TrendingItem>\n        );\n      })}\n    </TrendingGallery>\n  );\n};\n\nexport default Home;\n","import styled from '@emotion/styled';\n\nexport const TrendingItem = styled.li`\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: #af93aa12;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 352px;\n  transition-duration: 250ms;\n  transition-property: scale;\n  transition-timing-function: ease-in-out;\n\n  &:hover {\n    scale: 1.02;\n    box-shadow: 0px 1px 2px rgb(255 0 249 / 31%),\n      0px 2px 4px rgb(255 0 245 / 50%), 0px 4px 8px rgb(255 235 0 / 31%),\n      0px 8px 16px rgb(255 247 254 / 35%);\n  }\n`;\n\nexport const ImgThumb = styled.div`\n  width: 352px;\n  height: 528px;\n`;\n\nexport const TrendingGallery = styled.ul`\n  padding: 32px 0;\n\n  display: flex;\n\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const TitleMovieThumb = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 60px;\n  padding: 16px 0;\n  text-align: center;\n  font-size: 12px;\n`;\n","import styled from '@emotion/styled';\n\nexport const SearchBarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #392b3754;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #140e1294;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-color: #5d425b;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormBtnLabel = styled.span`\n  position: absolute;\n  width: 16px;\n  height: 16px;\n\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 24px;\n  padding-right: 4px;\n  background-color: #140e1200;\n  color: #ffffff;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n    color: #ffffff;\n  }\n`;\n\nexport const PosterImg = styled.img`\n  object-fit: cover;\n`;\n"],"names":["KEY","fetchTrendingMoviesData","axios","console","log","fetchMovieInfo","movieId","fetchMoviesBySearchWord","searchWord","fetchMovieCast","fetchMovieReviews","fetchTrailerVideo","useState","popularMovies","setPopularMovies","useEffect","getTrendingMovies","results","data","filteredData","map","id","poster_path","title","e","to","src","alt","width","TrendingItem","styled","ImgThumb","TrendingGallery","TitleMovieThumb","SearchBarHeader","SearchForm","SearchFormBtn","SearchFormBtnLabel","SearchInput","PosterImg"],"sourceRoot":""}