{"version":3,"file":"static/js/736.f0935e22.chunk.js","mappings":"kRAEaA,EAAWC,EAAAA,EAAAA,GAAH,wSAaRC,EAAkBD,EAAAA,EAAAA,IAAH,iEAKfE,EAAgBF,EAAAA,EAAAA,GAAH,gIAUbG,EAAiBH,EAAAA,EAAAA,IAAH,wNAadI,EAAaJ,EAAAA,EAAAA,IAAH,8C,SCgCvB,EA7Da,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA2BR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,+GAIFC,EAAAA,EAAAA,IAAA,6CAC8BJ,EAD9B,4BAlBN,mCAkBM,oBAJE,uBAGFF,EAHE,EAGVO,KAAQP,KAKVC,EAAuBD,EAhBhBQ,KAAI,kBAA4C,CACzDC,GADa,EAAGA,GAEhBC,UAFa,EAAOA,UAGpBC,KAHa,EAAkBA,KAI/BC,aAJa,EAAwBA,aAAxB,KAQC,kBASLZ,GATK,gCAWZa,QAAQC,IAAI,KAAEC,SAXF,yDAAH,qDAcbV,GACD,GAAE,CAACL,EAAME,KAGR,SAACN,EAAD,UACII,EAAKgB,OAGLhB,EAAKQ,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC/B,OACE,UAACnB,EAAD,YACE,SAACE,EAAD,WACE,SAACG,EAAD,CACEmB,IACEL,EAAY,0CAC2BA,GAD3B,iGAIdM,IAAKP,EACLQ,MAAM,MACNC,OAAO,WAGX,UAACvB,EAAD,YACE,wBAAKc,KACL,uBAAID,SAfOD,EAmBlB,KAvBD,sEA2BP,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastItem = styled.li`\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: #af93aa12;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 280px;\n  transition-duration: 250ms;\n  transition-property: scale;\n  transition-timing-function: ease-in-out;\n`;\n\nexport const ProfileImgThumb = styled.div`\n  // width: 280px;\n  // height: 352px;\n`;\n\nexport const ActorsGallery = styled.ul`\n  padding: 32px 0;\n\n  display: flex;\n\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const ActorNameThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n\n  height: 60px;\n  padding: 16px 0;\n  text-align: center;\n  font-size: 12px;\n`;\n\nexport const ActorPhoto = styled.img`\n  object-fit: cover;\n`;\n","// import { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  CastItem,\n  ProfileImgThumb,\n  ActorsGallery,\n  ActorNameThumb,\n  ActorPhoto,\n} from './Cast.styled';\n\nconst KEY = '298a5b49d75fb843dc4c4c38d9d64139';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const normalizedCast = arr => {\n    return arr.map(({ id, character, name, profile_path }) => ({\n      id,\n      character,\n      name,\n      profile_path,\n    }));\n  };\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const {\n          data: { cast },\n        } = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n        );\n        // console.log(cast);\n        setCast(normalizedCast(cast));\n        return cast;\n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n    getCast();\n  }, [cast, movieId]);\n\n  return (\n    <ActorsGallery>\n      {!cast.length ? (\n        <p>Sorry, there is no information about cast</p>\n      ) : (\n        cast.map(({ id, character, name, profile_path }) => {\n          return (\n            <CastItem key={id}>\n              <ProfileImgThumb>\n                <ActorPhoto\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : `https://as1.ftcdn.net/v2/jpg/05/64/45/52/1000_F_564455291_RRMiR6jlecxRBpSdtOT1KAX8a8FRhinM.jpg`\n                  }\n                  alt={name}\n                  width=\"280\"\n                  height=\"420\"\n                />\n              </ProfileImgThumb>\n              <ActorNameThumb>\n                <h3>{name}</h3>\n                <p>{character}</p>\n              </ActorNameThumb>\n            </CastItem>\n          );\n        })\n      )}\n    </ActorsGallery>\n  );\n};\n\nexport default Cast;\n"],"names":["CastItem","styled","ProfileImgThumb","ActorsGallery","ActorNameThumb","ActorPhoto","useState","cast","setCast","movieId","useParams","useEffect","getCast","axios","data","map","id","character","name","profile_path","console","log","message","length","src","alt","width","height"],"sourceRoot":""}