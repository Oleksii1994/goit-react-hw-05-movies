{"version":3,"file":"static/js/669.72229783.chunk.js","mappings":"2UAEaA,EAAM,mCAENC,EAAuB,mCAAG,uGAEtBC,EAAAA,EAAAA,IAAA,mEACiDF,IAH3B,wEAMnCG,QAAQC,IAAR,MANmC,wDAAH,qDAUvBC,EAAc,mCAAG,WAAMC,GAAN,0FAEbJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,oBAC8CN,EAD9C,oBAFa,wEAM1BG,QAAQC,IAAR,MAN0B,wDAAH,sDAUdG,EAAuB,mCAAG,WAAMC,GAAN,0FAEtBN,EAAAA,EAAAA,IAAA,4DAC0CF,EAD1C,iCACsEQ,EADtE,YAFsB,wEAMnCL,QAAQC,IAAR,MANmC,wDAAH,sDAUvBK,EAAc,mCAAG,WAAMH,GAAN,0FAEbJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,4BACsDN,EADtD,oBAFa,wEAM1BG,QAAQC,IAAR,MAN0B,wDAAH,sDAUdM,EAAiB,mCAAG,WAAMJ,GAAN,0FAEhBJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,4BACsDN,EADtD,oBAFgB,wEAM7BG,QAAQC,IAAR,MAN6B,wDAAH,sDAUjBO,EAAiB,mCAAG,WAAML,GAAN,0FAEhBJ,EAAAA,EAAAA,IAAA,6CAC2BI,EAD3B,2BACqDN,EADrD,oBAFgB,wEAM7BG,QAAQC,IAAR,MAN6B,wDAAH,qD,oKCpDjBQ,EAAYC,EAAAA,EAAAA,IAAH,sEAKTC,EAAQD,EAAAA,EAAAA,OAAH,0C,SCuClB,EAzCgB,WACd,OAA2BE,EAAAA,EAAAA,UAAS,CAAC,GAArC,eAAOC,EAAP,KAAcC,EAAd,KACQX,GAAYY,EAAAA,EAAAA,MAAZZ,QAoBR,OAlBAa,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,gHAIVT,EAAAA,EAAAA,IAAkBL,GAJR,uBAGVe,EAHU,EAGlBC,KAAQD,QAGVJ,EAAUI,EAAQ,IANE,kBAQbL,GARa,gCAUpBb,QAAQC,IAAI,KAAEmB,SAVM,yDAAH,qDAarBH,GAED,GAAE,KAGD,SAACR,EAAD,UACII,GAGA,SAACF,EAAD,CACEU,MAAM,MACNC,OAAO,MACPC,IAAG,wCAAmCV,EAAMW,KAC5CC,MAAM,uBACNC,YAAY,IACZC,MAAM,sGACNC,iBAAe,KATjB,iEAcP,C","sources":["api/api.js","components/Trailer/Trailer.styled.jsx","components/Trailer/Trailer.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const KEY = '298a5b49d75fb843dc4c4c38d9d64139';\n\nexport const fetchTrendingMoviesData = async () => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=${KEY}`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchMovieInfo = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchMoviesBySearchWord = async searchWord => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${searchWord}&page=1`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchTrailerVideo = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${KEY}&language=en-US`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const IFrameBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Frame = styled.iframe`\n  align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchTrailerVideo } from 'api/api';\nimport { Frame, IFrameBox } from './Trailer.styled';\n\nconst Trailer = () => {\n  const [video, setVideos] = useState({});\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getTrailerVideo = async () => {\n      try {\n        const {\n          data: { results },\n        } = await fetchTrailerVideo(movieId);\n\n        setVideos(results[0]);\n\n        return video;\n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n    getTrailerVideo();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <IFrameBox>\n      {!video ? (\n        <p>Oops there're no video to this movie</p>\n      ) : (\n        <Frame\n          width=\"680\"\n          height=\"400\"\n          src={`https://www.youtube.com/embed/${video.key}`}\n          title=\"YouTube video player\"\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n          allowFullScreen\n        ></Frame>\n      )}\n    </IFrameBox>\n  );\n};\n\nexport default Trailer;\n"],"names":["KEY","fetchTrendingMoviesData","axios","console","log","fetchMovieInfo","movieId","fetchMoviesBySearchWord","searchWord","fetchMovieCast","fetchMovieReviews","fetchTrailerVideo","IFrameBox","styled","Frame","useState","video","setVideos","useParams","useEffect","getTrailerVideo","results","data","message","width","height","src","key","title","frameBorder","allow","allowFullScreen"],"sourceRoot":""}