{"version":3,"file":"static/js/278.9d887410.chunk.js","mappings":"6QAEaA,EAAeC,EAAAA,EAAAA,GAAH,wfAoBZC,EAAWD,EAAAA,EAAAA,IAAH,2DAKRE,EAAkBF,EAAAA,EAAAA,GAAH,gIAUfG,EAAkBH,EAAAA,EAAAA,IAAH,+K,8JCdtBI,EAAU,mCAAG,WAAMC,GAAN,iFAEH,mCAFG,SAIFC,EAAAA,EAAAA,IAAA,4DAFD,mCAEC,iCACsED,EADtE,YAJE,wEAUfE,QAAQC,IAAR,MAVe,yDAAH,sDAsJhB,UAxIe,WACb,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4CF,EAAAA,EAAAA,UAAS,IAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAwBF,EAAaG,IAAI,SACzCC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WAER,GADAd,QAAQC,IAAIS,GACkB,OAA1BA,EAIJ,IAGE,IAAMK,EAAiB,mCAAG,wGAGdlB,EAAWa,GAHG,iBAEdM,EAFc,EAEtBC,KAAQD,SAIGE,QACXC,IAAAA,OAAAA,QACE,8DAGEC,EAAeJ,EAAQK,KAC3B,gBACEC,EADF,EACEA,GACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,WACAC,EALF,EAKEA,UACAC,EANF,EAMEA,eANF,EAOEC,UAPF,MAQO,CACLN,GAAAA,EACAC,YAAAA,EACAC,SAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAC,eAAAA,EAdF,IAkBFrB,EAAkBc,GA9BM,2CAAH,qDAkCvBL,GAGD,CAFC,MAAOc,GACP7B,QAAQC,IAAI4B,EAAEC,QACf,CACF,GAAE,CAACpB,EAAuBF,IAsB3B,OACE,4BACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAYuB,SAnBG,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAUF,EAAMG,OAAOC,SAASC,OAAhCH,MAKN,GAHA9B,EAAgB8B,EAAMI,cAAcC,QACpC9B,EAAgB,CAAE+B,MAAON,EAAMI,cAAcC,SAEjB,KAAxBpC,EAAaoC,OAGf,OAFApB,IAAAA,OAAAA,QAAwB,uCACxBe,EAAQ,IAIV9B,EAAgB,GACjB,EAKK,WACE,UAAC,KAAD,CAAeqC,KAAK,SAASC,UAAU,SAAvC,WACE,SAAC,MAAD,CAAWC,KAAK,OAAOC,KAAK,UAC5B,SAAC,KAAD,CAAoBF,UAAU,eAA9B,wBAKF,SAAC,KAAD,CACED,KAAK,OACLI,aAAa,MACbC,KAAK,SACLC,WAAS,EACTC,YAAY,2BACZd,MAAO/B,EACP8C,SAtCO,SAAC,GAAgB,IAAdd,EAAa,EAAbA,OAClB/B,EAAgB+B,EAAOD,MACxB,SAyCI7B,IACC,SAAC,KAAD,UACGA,EAAegB,KACd,YAKO,IAJLC,EAII,EAJJA,GACAC,EAGI,EAHJA,YAEAI,EACI,EADJA,eAEA,OACE,SAAC,KAAD,CAAMuB,GAAE,kBAAa5B,GAAM6B,MAAO,CAAEC,KAAMxC,GAA1C,UACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEyC,IACE9B,EAAW,0CAC4BA,GAD5B,2PAIb+B,IAAK3B,EACL4B,MAAM,MACNC,OAAO,WAGX,SAAC,KAAD,WACE,wBAAK7B,UAfgDL,EAoB9D,QAMZ,C,iNCzKYmC,EAAkBhE,EAAAA,EAAAA,OAAH,mcAmBfiE,EAAajE,EAAAA,EAAAA,KAAH,mLAUVkE,EAAgBlE,EAAAA,EAAAA,OAAH,icAoBbmE,EAAqBnE,EAAAA,EAAAA,KAAH,iNAalBoE,EAAcpE,EAAAA,EAAAA,MAAH,sUAmBXmC,EAAYnC,EAAAA,EAAAA,IAAH,6C","sources":["pages/Home/Home.styled.jsx","pages/Movies/Movies.jsx","pages/Movies/Movies.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const TrendingItem = styled.li`\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: #af93aa12;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 352px;\n  transition-duration: 250ms;\n  transition-property: scale;\n  transition-timing-function: ease-in-out;\n\n  &:hover {\n    scale: 1.02;\n    box-shadow: 0px 1px 2px rgb(255 0 249 / 31%),\n      0px 2px 4px rgb(255 0 245 / 50%), 0px 4px 8px rgb(255 235 0 / 31%),\n      0px 8px 16px rgb(255 247 254 / 35%);\n  }\n`;\n\nexport const ImgThumb = styled.div`\n  width: 352px;\n  height: 528px;\n`;\n\nexport const TrendingGallery = styled.ul`\n  padding: 32px 0;\n\n  display: flex;\n\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const TitleMovieThumb = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 60px;\n  padding: 16px 0;\n  text-align: center;\n  font-size: 12px;\n`;\n","// import { NavLink } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n\nimport { useEffect, useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport axios from 'axios';\nimport { FaSistrix } from 'react-icons/fa';\nimport {\n  SearchBarHeader,\n  SearchForm,\n  SearchInput,\n  SearchFormBtn,\n  SearchFormBtnLabel,\n  PosterImg,\n} from './Movies.styled';\nimport {\n  TrendingItem,\n  TrendingGallery,\n  TitleMovieThumb,\n  ImgThumb,\n} from '../Home/Home.styled';\n\nconst fetchMovie = async searchWord => {\n  try {\n    const KEY = '298a5b49d75fb843dc4c4c38d9d64139';\n\n    return await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${searchWord}&page=1`\n    );\n    // const trendingMovies = res.data.results;\n    // console.log(trendingMovies);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst Movies = () => {\n  const [searchQuerry, setSearchQuerry] = useState('');\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQueryFromParams = searchParams.get('query');\n  const location = useLocation();\n  useEffect(() => {\n    console.log(searchQueryFromParams);\n    if (searchQueryFromParams === null) {\n      return;\n    }\n\n    try {\n      // const { value } = event.target.lastChild;\n      // setSearchQuerry(value.toLowerCase().trim());\n      const getFilteredMovies = async () => {\n        const {\n          data: { results },\n        } = await fetchMovie(searchQueryFromParams);\n        // console.log(results);\n\n        if (!results.length) {\n          Notiflix.Notify.warning(\n            'Oops there are no movies by this search, try another title'\n          );\n        }\n        const filteredData = results.map(\n          ({\n            id,\n            poster_path,\n            overview,\n            popularity,\n            genre_ids,\n            original_title,\n            PosterImg,\n          }) => ({\n            id,\n            poster_path,\n            overview,\n            popularity,\n            genre_ids,\n            original_title,\n          })\n        );\n        // console.log(filteredData);\n        setFilteredMovies(filteredData);\n        // console.log(filteredMovies);\n      };\n\n      getFilteredMovies();\n    } catch (e) {\n      console.log(e.message);\n    }\n  }, [searchQueryFromParams, searchParams]);\n\n  const onChange = ({ target }) => {\n    setSearchQuerry(target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let { value } = event.target.elements.search;\n\n    setSearchQuerry(value.toLowerCase().trim());\n    setSearchParams({ query: value.toLowerCase().trim() });\n\n    if (searchQuerry.trim() === '') {\n      Notiflix.Notify.warning('Enter title of movie to search');\n      value = '';\n      return;\n    }\n\n    setSearchQuerry('');\n  };\n\n  return (\n    <div>\n      <SearchBarHeader>\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchFormBtn type=\"submit\" className=\"button\">\n            <FaSistrix size=\"24px\" fill=\"#fff\" />\n            <SearchFormBtnLabel className=\"button-label\">\n              Search\n            </SearchFormBtnLabel>\n          </SearchFormBtn>\n\n          <SearchInput\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"search\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={searchQuerry}\n            onChange={onChange}\n          />\n        </SearchForm>\n      </SearchBarHeader>\n\n      {filteredMovies && (\n        <TrendingGallery>\n          {filteredMovies.map(\n            ({\n              id,\n              poster_path,\n\n              original_title,\n            }) => {\n              return (\n                <Link to={`/movies/${id}`} state={{ from: location }} key={id}>\n                  <TrendingItem>\n                    <ImgThumb>\n                      <PosterImg\n                        src={\n                          poster_path\n                            ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                            : `https://media.istockphoto.com/id/147273331/uk/%D1%84%D0%BE%D1%82%D0%BE/%D1%81%D0%B8%D0%BD%D1%94-%D0%B2%D1%96%D0%B4%D1%80%D0%BE-%D0%BF%D0%BE%D0%BF%D0%BA%D0%BE%D1%80%D0%BD%D1%83.jpg?s=2048x2048&w=is&k=20&c=EVEpgBCnZmkrieihX5eDgsssBgcGyU71woNkj5N4FiM=`\n                        }\n                        alt={original_title}\n                        width=\"352\"\n                        height=\"528\"\n                      />\n                    </ImgThumb>\n                    <TitleMovieThumb>\n                      <h2>{original_title}</h2>\n                    </TitleMovieThumb>\n                  </TrendingItem>\n                </Link>\n              );\n            }\n          )}\n        </TrendingGallery>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import styled from '@emotion/styled';\n\nexport const SearchBarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #392b3754;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #140e1294;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-color: #5d425b;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormBtnLabel = styled.span`\n  position: absolute;\n  width: 16px;\n  height: 16px;\n\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 24px;\n  padding-right: 4px;\n  background-color: #140e1200;\n  color: #ffffff;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n    color: #ffffff;\n  }\n`;\n\nexport const PosterImg = styled.img`\n  object-fit: cover;\n`;\n"],"names":["TrendingItem","styled","ImgThumb","TrendingGallery","TitleMovieThumb","fetchMovie","searchWord","axios","console","log","useState","searchQuerry","setSearchQuerry","filteredMovies","setFilteredMovies","useSearchParams","searchParams","setSearchParams","searchQueryFromParams","get","location","useLocation","useEffect","getFilteredMovies","results","data","length","Notiflix","filteredData","map","id","poster_path","overview","popularity","genre_ids","original_title","PosterImg","e","message","onSubmit","event","preventDefault","value","target","elements","search","toLowerCase","trim","query","type","className","size","fill","autoComplete","name","autoFocus","placeholder","onChange","to","state","from","src","alt","width","height","SearchBarHeader","SearchForm","SearchFormBtn","SearchFormBtnLabel","SearchInput"],"sourceRoot":""}